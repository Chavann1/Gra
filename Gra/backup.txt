#include <iostream>
#include <fstream>
#include <string>
#include <conio.h>
#include <windows.h>
#include <stdlib.h>
using namespace std;

// GLOBALNE ZMIENNE
int hp = 10;
int lvl = 0;
int tablica[20][20];
string current_room;

void clear_empty() {
    for (int i = 0; i < 20; i += 2) {
        for (int j = 0; j < 20; j++) {
            tablica[i][j]=0;
        }
    }
}

void load_room(string room, int x) {
    // WCZYTANIE NOWEGO POZIOMU
    string rm = "rooms/" + room;
    fstream pokoj(rm);
    cout << endl;
    for (int i = 1; i < 20; i+=2) {
        for (int j = 0; j < 20; j++) {
            pokoj >> tablica[i][j];
        }
    }
    tablica[x][10] = 10;
    pokoj.close();
}

int check_field(int x, int y) {
    int num = tablica[x][y];
    if (tablica[x][y] == 3) return false;
    else if (tablica[x][y] > 10) {
        if (x < 7) load_room("rooms/room_" + to_string(num) + ".txt", 3);
        else if (x >= 7 && x < 13) load_room("rooms/room_" + to_string(num) + ".txt", 9);
        else if (x >= 13) load_room("rooms/room_" + to_string(num) + ".txt", 17);
        return true;
    }
}

void load_save(string save) {
    // WCZYTANIE DANYCH GRACZA
    fstream zapis(save);
    int count = 0;
    string data;
    while (zapis >> data) {
        switch (count) {
        case 0:
            hp = atoi(data.c_str());
            break;
        case 1:
            lvl = atoi(data.c_str());
            break;
        case 2:
            current_room = data;
            break;
        }
        count++;
    }
    zapis.close();
    load_room(current_room, 9);
}

void save_save() {
    // ZAPISANIE DANYCH DO OBECNEGO SAVE
}

void draw_level() {
    system("cls");
    // RYSOWANIE PODANEJ TABLICY
    for (int i = 0; i < 20; i++) {
        for (int j = 0; j < 20; j++) {
            //cout << tablica[i][j] << " ";
            switch(tablica[i][j]){
            case 0: cout << "  "; break;
            case 1: cout << "[ "; break;
            case 2: cout << "W "; break;
            case 3: cout << "# "; break;
            case 10: cout << "@ "; break;
            default: cout << "T ";
            }
        }
        cout << endl;
    }
}

void ruch_gracza(int *cur, int &p) {
    char ruch;
    ruch = _getch();
    switch (ruch) {
    case 'w':
        if (check_field(cur[0] - 2, cur[1]) != false) {
            tablica[cur[0]][cur[1]] = p;
            cur[0] -= 2;
            p = tablica[cur[0]][cur[1]];
        }
        break;
    case 's':
        if (check_field(cur[0] + 2, cur[1]) != false) {
            tablica[cur[0]][cur[1]] = p;
            cur[0] += 2;
            p = tablica[cur[0]][cur[1]];
        }
        break;
    case 'a':
        if (check_field(cur[0], cur[1] - 1) != false) {
            tablica[cur[0]][cur[1]] = p;
            cur[1] -= 1;
            p = tablica[cur[0]][cur[1]];
        }
        break;
    case 'd':
        if (check_field(cur[0], cur[1] + 1) != false) {
            tablica[cur[0]][cur[1]] = p;
            cur[1] += 1;
            p = tablica[cur[0]][cur[1]];
        }
        break;
    default: break;

    }
    tablica[cur[0]][cur[1]] = 10;
}

void title() {
    string title = "";
    fstream tytul("tytul.txt");
    while (getline(tytul, title)) {
        cout << title << endl;
    }
    tytul.close();
    cout << "====================\n";
}

void menu() {
    int pos = 0; // ZMIENNA PRZECHOWUJĄCA POZYCJĘ KURSORA
    int submenu = 0; // ZMIENNA DO OTWIERANIA ODPOWIEDNIEGO MENU W MENU
    while (true) {
        system("cls");
        // ========== TABLICA DO WYŚWIETLANIA 'KURSORA' ========== 
        string cursor[4];
        for (int i = 0; i < 4; i++) {
            cursor[i] = "";
        }
        if (pos > 3) pos = 0;
        if (pos < 0) pos = 3;
        cursor[pos] = "*";

        // INFO
        //cout << endl << "W gore [w] | W dol [s] | Zatwierdz [ENTER]\n";
        // ========== WCZYTANIE TYTUŁU ========== 
        title();

        // ==================== RESZTA MENU ==================== 
        cout << "\t" << cursor[0] << "Wczytaj gre" << endl;
        cout << "\t" << cursor[1] << "Rozpocznij nowa" << endl;
        cout << "\t" << cursor[2] << "Sterowanie" << endl;
        cout << "\t" << cursor[3] << "Wyjdz" << endl;
        cout << "====================\n";

        // RYSOWANIE SUBMENU
        // otwarcie zapisów
        fstream save1("save1.txt"); 
        fstream save2("save2.txt");
        unsigned char wybor2;
        switch (submenu) {

        case 1: // ======== WCZYTYWANIE GRY ======== 
            cout << "Dostepne zapisy: (wybierz numer w nawiasie)\n";

            // WYŚWIETL ZAPIS 1
            if (save1.good()) cout << "SAVE 1"; else cout << "[BRAK 1]";
            cout << " (1)" << endl;

            // WYŚWIETL ZAPIS 2
            if (save2.good()) cout << "SAVE 2"; else cout << "[BRAK 2]";
            cout << " (2)" << endl<<endl;
            // Opcja 3
            cout << "Powrot (3)";

            // wybor w submenu
            wybor2 = _getch();
            if (wybor2 == '1') {
                load_save("save1.txt");
                return;
            } else if (wybor2 == '2') {
                load_save("save2.txt");
                return;
            } else if (wybor2 == '3') {
                submenu = -1;
            }
            wybor2 = '0';
            break;
        
        case 2: // ======== WCZYTYWANIE GRY ======== 
            /*
            cout << "Stworz/wyczysc zapis: (wybierz numer w nawiasie)\n";

            // WYŚWIETL ZAPIS 1
            if (save1.good()) cout << "SAVE 1"; else cout << "SAVE 1 [BRAK]";
            cout << " (1)" << endl;

            // WYŚWIETL ZAPIS 2
            if (save2.good()) cout << "SAVE 2"; else cout << "SAVE 2 [BRAK]";
            cout << " (2)" << endl << endl;
            cout << "Powrot (3)";
            wybor2 = _getch();

            // wybor w submenu
            wybor2 = _getch();
            if (wybor2 == '1') {
                load_save("save1.txt");
                return;
            }
            else if (wybor2 == '2') {
                load_save("save2.txt");
                return;
            }
            else if (wybor2 == '3') {
                submenu = -1;
            }
            wybor2 = '0';
            */
            break;

        case 3: // ======== WYŚWIETLENIE STEROWANIA ======== 
            cout << "Sterowanie:\n";
            cout << "Powrot (3)";
            // wybor w submenu
            wybor2 = _getch();
            if (wybor2 == '3') {
                submenu = -1;
            }
            wybor2 = '0';
            break;

        case 4:
            exit(0);
            break;
        default: break;
        }
        // ZAMKNIĘCIE ZAPISÓW
        save1.close();
        save2.close();
        // ==================== WYBÓR ==================== 
        unsigned char wybor; // ZMIENNA POBIERAJACA ZNAK
        if (submenu == 0) {
            wybor = _getch();
            int kod_wyboru = static_cast <int>(wybor); // ZMIENNA PRZECHOWUJĄCA KOD ENTERA
            switch (wybor) {
            case 'w': pos--; break;
            case 's': pos++; break;
            default:
                if (kod_wyboru == 13) submenu = pos + 1;
                break;
            }
        }
        else if (submenu == -1) submenu = 0;
    }
}

int main()
{
    menu();
    cout << "HP =" << hp;
    cout << "lvl =" << lvl;
    int *current = new int[2];
    int prev = 1;
    current[0] = 9;
    current[1] = 10;

    while (true) {
        draw_level();
        ruch_gracza(current, prev);
    }
    delete[] current;
    return 0;
}

